// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     schema.avsc
 */
package avro

import (
	"encoding/json"
	"io"

	"github.com/actgardner/gogen-avro/v10/util"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

func writeComCompanyTeamConflictingFixedType(r ComCompanyTeamConflictingFixedType, w io.Writer) error {
	_, err := w.Write(r[:])
	return err
}

type ComCompanyTeamConflictingFixedTypeWrapper struct {
	Target *ComCompanyTeamConflictingFixedType
}

type ComCompanyTeamConflictingFixedType [1]byte

func (b *ComCompanyTeamConflictingFixedType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	codepoints := util.DecodeByteString(s)
	copy((*b)[:], codepoints)
	return nil
}

func (b ComCompanyTeamConflictingFixedType) MarshalJSON() ([]byte, error) {
	return []byte(util.EncodeByteString(b[:])), nil
}

func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetInt(v int32)    { panic("Unsupported operation") }
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetLong(v int64)   { panic("Unsupported operation") }
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (r ComCompanyTeamConflictingFixedTypeWrapper) SetBytes(v []byte) {
	copy((*r.Target)[:], v)
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetString(v string) {
	panic("Unsupported operation")
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetUnionElem(v int64) {
	panic("Unsupported operation")
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) Get(i int) types.Field {
	panic("Unsupported operation")
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) NullField(int)    { panic("Unsupported operation") }
func (_ ComCompanyTeamConflictingFixedTypeWrapper) HintSize(int)     { panic("Unsupported operation") }
func (_ ComCompanyTeamConflictingFixedTypeWrapper) Finalize()        {}
func (_ ComCompanyTeamConflictingFixedTypeWrapper) SetDefault(i int) { panic("Unsupported operation") }
